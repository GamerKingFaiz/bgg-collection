{"version":3,"sources":["utils/urlConstants.js","Components/UsernameField.js","utils/gameDataConversions.js","utils/columns.js","Containers/App.js","utils/helperFunctions.js","serviceWorker.js","index.js"],"names":["CORS_URL","THING_ITEMS_ENDPOINT","concat","COLLECTION_ENDPOINT","UsernameField","_ref","recursiveFetchAndWait","setGameList","react_default","a","createElement","className","type","placeholder","name","id","onKeyPress","event","key","ReactGA","category","action","target","value","onClick","document","querySelector","gameDataConversions","array","forEach","game","statistics","ratings","ranks","rank","$","Number","minplayers","isNaN","stats","maxplayers","maxplaytime","undefined","yearpublished","columns","Header","accessor","maxWidth","sortMethod","b","Infinity","sortable","Cell","props","src","width","alt","minWidth","filterable","style","whiteSpace","href","original","rel","defaultSortDesc","backgroundColor","Math","round","color","initialize","pageview","window","location","pathname","search","App","_useState","useState","_useState2","Object","slicedToArray","gameList","_useState3","_useState4","loading","setLoading","_useState5","_useState6","pageSize","setPageSize","useCallback","url","fetch","then","response","status","text","setTimeout","console","log","data","numGames","gameIds","arrayOfArrays","XML2JS","parseString","err","result","items","totalitems","item","push","objectid","length","splice","join","xml","useEffect","filters","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","return","addFilterPlaceholder","params","URL","searchParams","username","get","rows","src_Components_UsernameField","es","defaultSorted","desc","showPaginationTop","minRows","pageSizeOptions","defaultPageSize","noDataText","defaultFilterMethod","filter","row","pivotId","String","toLowerCase","includes","role","aria-label","Boolean","hostname","match","ReactDOM","render","src_Containers_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8RAIMA,SAAW,8CACJC,EAAoB,GAAAC,OAAMF,EAAN,wDACpBG,EAAmB,GAAAD,OAAMF,EAAN,uHC6CjBI,EA/BO,SAAAC,GAA2C,IAAxCC,EAAwCD,EAAxCC,sBAAuBC,EAAiBF,EAAjBE,YAU5C,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,SACIE,KAAK,OACLC,YAAY,qBACZC,KAAK,WACLC,GAAG,YACHC,WAfW,SAACC,GACF,UAAdA,EAAMC,MAfdC,IAAQF,MAAM,CACVG,SAAU,qBACVC,OAAQ,sBAeJd,EAAY,IACZD,EAAsBH,EAAsBc,EAAMK,OAAOC,WAazDf,EAAAC,EAAAC,cAAA,UAAQE,KAAK,SACLY,QAAU,SAACP,GA1B3BE,IAAQF,MAAM,CACVG,SAAU,qBACVC,OAAQ,mBA0BgBd,EAAY,IACZD,EAAsBH,EAAsBsB,SAASC,cAAc,cAAcH,SAJrG,YCbGI,EAzBa,SAACC,GAC5BA,EAAMC,QAAQ,SAAAC,GACkD,eAA3DA,EAAKC,WAAW,GAAGC,QAAQ,GAAGC,MAAM,GAAGC,KAAK,GAAGC,EAAEZ,MACpDO,EAAKC,WAAW,GAAGC,QAAQ,GAAGC,MAAM,GAAGC,KAAK,GAAGC,EAAEZ,MAAQ,MAEzDO,EAAKC,WAAW,GAAGC,QAAQ,GAAGC,MAAM,GAAGC,KAAK,GAAGC,EAAEZ,MAAQa,OAAON,EAAKC,WAAW,GAAGC,QAAQ,GAAGC,MAAM,GAAGC,KAAK,GAAGC,EAAEZ,OAGlHO,EAAKO,WAAW,GAAGF,EAAEZ,MAAQa,OAAON,EAAKO,WAAW,GAAGF,EAAEZ,OACrDe,MAAMR,EAAKO,WAAW,GAAGF,EAAEZ,SAC9BO,EAAKS,MAAM,GAAGJ,EAAEE,WAAa,MAE9BP,EAAKU,WAAW,GAAGL,EAAEZ,MAAQa,OAAON,EAAKU,WAAW,GAAGL,EAAEZ,OACrDe,MAAMR,EAAKU,WAAW,GAAGL,EAAEZ,SAC9BO,EAAKU,WAAW,GAAGL,EAAEZ,MAAQ,MAE9BO,EAAKW,YAAY,GAAGN,EAAEZ,MAAQa,OAAON,EAAKW,YAAY,GAAGN,EAAEZ,OACvDe,MAAMR,EAAKW,YAAY,GAAGN,EAAEZ,SAC/BO,EAAKW,YAAY,GAAGN,EAAEZ,MAAQ,WAEOmB,IAAlCZ,EAAKa,cAAc,GAAGR,EAAEZ,QAC3BO,EAAKa,cAAc,GAAGR,EAAEZ,MAAQ,CAAC,UC2HrBqB,EA/IC,CACZ,CACIC,OAAQ,OACRC,SAAU,oDACVC,SAAU,GACVC,WAAY,SAACvC,EAAEwC,GAKX,OAHAxC,EAAU,OAANA,QAAoBiC,IAANjC,GAAyB,QAANA,EAAcyC,IAAWzC,IAC9DwC,EAAU,OAANA,QAAoBP,IAANO,GAAyB,QAANA,EAAcC,IAAWD,GAGnD,EAEPxC,EAAIwC,GACI,EAIL,IAGf,CACIJ,OAAQ,GACRC,SAAU,eACVC,SAAU,GACVI,UAAU,EACVC,KAAM,SAAAC,GAAK,OAAI7C,EAAAC,EAAAC,cAAA,OAAK4C,IAAMD,EAAM9B,MAAQgC,MAAM,KAAKC,IAAI,YAAY7C,UAAU,gBAEjF,CACIkC,OAAQ,QACRC,SAAU,kBACVW,SAAU,IACVV,SAAU,IACVW,YAAY,EACZC,MAAO,CAAEC,WAAc,SACvBR,KAAM,SAAAC,GAAK,OAAI7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACdH,EAAAC,EAAAC,cAAA,KAAGmD,KAAO,uCAAyCR,EAAMS,SAAS3B,EAAEpB,GAAKO,OAAO,SAASyC,IAAI,uBACvFV,EAAM9B,OAFb,IAGMf,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAhB,IAAmC0C,EAAMS,SAASnB,cAAc,GAAGR,EAAEZ,MAArE,QAGzB,CACIsB,OAAQ,aACRC,SAAU,8CACVkB,iBAAiB,EACjBjB,SAAU,IACVK,KAAM,SAAAC,GAAK,OAAK7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEPgD,MAAO,CAACM,gBACRC,KAAKC,MAAM,GAAKd,EAAM9B,OAAO,IAAM,EAAI,UACrC2C,KAAKC,MAAM,GAAKd,EAAM9B,OAAO,IAAM,EAAK,UACxC2C,KAAKC,MAAM,GAAKd,EAAM9B,OAAO,IAAM,EAAK,UACxC2C,KAAKC,MAAM,GAAKd,EAAM9B,OAAO,IAAM,EAAK,UACxC2C,KAAKC,MAAM,GAAKd,EAAM9B,OAAO,IAAM,EAAK,UACxC,YAGJ2C,KAAKC,MAAM,GAAKd,EAAM9B,OAAO,OAK3D,CACIsB,OAAQ,cACRC,SAAU,wBACVC,SAAU,IACVC,WAAY,SAACvC,EAAEwC,GAKX,OAHAxC,EAAU,OAANA,QAAoBiC,IAANjC,GAAyB,OAANA,EAAayC,IAAWzC,IAC7DwC,EAAU,OAANA,QAAoBP,IAANO,GAAyB,OAANA,EAAaC,IAAWD,GAGlD,EAEPxC,EAAIwC,GACI,EAIL,IAGf,CACIJ,OAAQ,cACRC,SAAU,wBACVkB,iBAAiB,EACjBjB,SAAU,IACVC,WAAY,SAACvC,EAAEwC,GAKX,OAHAxC,EAAU,OAANA,QAAoBiC,IAANjC,GAAyB,OAANA,GAAcyC,IAAWzC,IAC9DwC,EAAU,OAANA,QAAoBP,IAANO,GAAyB,OAANA,GAAcC,IAAWD,GAGnD,EAEPxC,EAAIwC,GACI,EAIL,IAGf,CACIJ,OAAQ,YACRC,SAAU,yBACVkB,iBAAiB,EACjBjB,SAAU,IACVC,WAAY,SAACvC,EAAEwC,GAKX,OAHAxC,EAAU,OAANA,QAAoBiC,IAANjC,GAAyB,OAANA,GAAcyC,IAAWzC,IAC9DwC,EAAU,OAANA,QAAoBP,IAANO,GAAyB,OAANA,GAAcC,IAAWD,GAGnD,EAEPxC,EAAIwC,GACI,EAIL,GAEXG,KAAM,SAAAC,GAAK,OAAI7C,EAAAC,EAAAC,cAAA,YAAO2C,EAAM9B,MAAb,UAEnB,CACIsB,OAAQ,SACRC,SAAU,oDACVC,SAAU,IACVK,KAAM,SAAAC,GAAK,OAAK7C,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAA,QACJiD,MAAO,CAACS,MACJF,KAAKC,MAAM,IAAMd,EAAM9B,OAAO,KAAM,EAAI,UACtC2C,KAAKC,MAAM,IAAMd,EAAM9B,OAAO,KAAM,EAAI,UACxC2C,KAAKC,MAAM,IAAMd,EAAM9B,OAAO,KAAM,EAAI,WACxC2C,KAAKC,MAAM,IAAMd,EAAM9B,OAAiB,aAG5C2C,KAAKC,MAAM,IAAMd,EAAM9B,OAAO,KARpC,0CCnHxBJ,IAAQkD,WAAW,kBACnBlD,IAAQmD,SAASC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,QAE5D,IAoJeC,EA7IH,WAAM,IAAAC,EAEeC,mBAAS,IAFxBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEVK,EAFUH,EAAA,GAEAvE,EAFAuE,EAAA,GAAAI,EAGaL,oBAAS,GAHtBM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAGVE,EAHUD,EAAA,GAGDE,EAHCF,EAAA,GAAAG,EAIeT,wBAASnC,GAJxB6C,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAIVE,EAJUD,EAAA,GAIAE,EAJAF,EAAA,GAYXjF,EAAwBoF,sBAC7B,SAACC,GACAN,GAAW,GAEXO,MAAMD,GACLE,KAAK,SAAAC,GACL,GAAwB,MAApBA,EAASC,OACZ,OAAOD,EAASE,OAEc,MAApBF,EAASC,OCpCpBE,WDqCsB,kBAAM3F,EAAsBqF,ICrC7B,KDwCpBO,QAAQC,IAAI,UAAWL,EAASC,UAGjCF,KAAK,SAAAO,GACL,IAAIC,EACAC,EAAU,GACVC,EAAgB,GAmBpB,GAjBAC,IAAOC,YAAYL,EAAM,SAACM,EAAKC,GAS9B,GARkC,MAA9BA,EAAOC,MAAMzE,EAAE0E,aAClBR,EAAWjE,OAAOuE,EAAOC,MAAMzE,EAAE0E,YAEjCF,EAAOC,MAAME,KAAKjF,QAAQ,SAAAC,GACzBwE,EAAQS,KAAKjF,EAAKK,EAAE6E,aAIlBX,EAAW,KAEd,KAAOC,EAAQW,QACdV,EAAcQ,KAAKT,EAAQY,OAAO,EAAE,SAKnCb,EAAW,GAAKA,GAAY,KAC/B,OAAOT,MAAM3F,EAAuBqG,EAAQa,QAE3CtB,KAAK,SAAAC,GAAQ,OAAIA,EAASE,SAE1BH,KAAK,SAAAuB,GACL,OAAOZ,IAAOC,YAAYW,EAAK,SAACV,EAAKC,GACpChF,EAAoBgF,EAAOC,MAAME,MAEjCvG,EAAY,SAAA0E,GAAQ,OAAIA,EAAS/E,OAAOyG,EAAOC,MAAME,QAErDzB,GAAW,OAKbkB,EAAc1E,QAAQ,SAAAD,GACrBgE,MAAM3F,EAAuB2B,EAAMuF,QAElCtB,KAAK,SAAAC,GAAQ,OAAIA,EAASE,SAE1BH,KAAK,SAAAuB,GACL,OAAOZ,IAAOC,YAAYW,EAAK,SAACV,EAAKC,GACpChF,EAAoBgF,EAAOC,MAAME,MAEjCvG,EAAY,SAAA0E,GAAQ,OAAIA,EAAS/E,OAAOyG,EAAOC,MAAME,cAKxDzB,GAAW,MAId,IAyBD,OAtBAgC,oBAAU,YClHyB,WAChC,IAAMC,EAAU7F,SAAS8F,iBAAiB,qBADJC,GAAA,EAAAC,GAAA,EAAAC,OAAAhF,EAAA,IAEtC,QAAAiF,EAAAC,EAAmBN,EAAnBO,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA4BG,EAAApG,MACnBV,YAAc,YAHe,MAAA6F,GAAAe,GAAA,EAAAC,EAAAhB,EAAA,YAAAc,GAAA,MAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,IDmHxCQ,GAGA,IAAIC,EAAU,IAAIC,IAAI3G,SAAS+C,UAAW6D,aACtCC,EAAWH,EAAOI,IAAI,YAGtBC,EAAOL,EAAOI,IAAI,QACT,OAATC,GACH/C,EAAYrD,OAAOoG,IAIH,OAAbF,IA3GFnH,IAAQF,MAAM,CACVG,SAAU,qBACVC,OAAQ,sBA6Gbf,EADaH,EAAsBmI,KAGlC,CAAChI,IAGHE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAASkD,KAAK,KAA3B,0BACJrD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,uEACAH,EAAAC,EAAAC,cAAC+H,EAAD,CAAenI,sBAA0BA,EAAwBC,YAAgBA,IACjFC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAb,+CACAH,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CACCtC,KAASnB,EACTrC,QAAYA,EACZ+F,cAAkB,CAAC,CAAE5H,GAAI,oDAAqD6H,MAAM,IACpFC,mBAAsB,EACtBC,QAAY,EACZC,gBAAmB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAM,IAAM,IAAM,KACxEC,gBAAoB,IACpBxD,SAAaA,EACbJ,QAAYA,EACZ6D,WAAe,0DACftI,UAAY,aACZuI,oBAEC,SAACC,EAAQC,GACR,IAAMrI,EAAKoI,EAAOE,SAAWF,EAAOpI,GACpC,YAAmB2B,IAAZ0G,EAAIrI,IAAoBuI,OAAOF,EAAIrI,IAAKwI,cAAcC,SAASL,EAAO5H,MAAMgI,kBAGtF/I,EAAAC,EAAAC,cAAA,OAAKK,GAAG,UACPP,EAAAC,EAAAC,cAAA,8BAAqBF,EAAAC,EAAAC,cAAA,QAAM+I,KAAK,MAAMC,aAAW,aAA5B,oBEtJLC,QACW,cAA7BpF,OAAOC,SAASoF,UAEe,UAA7BrF,OAAOC,SAASoF,UAEhBrF,OAAOC,SAASoF,SAASC,MACvB,2DCZNC,IAASC,OAAOvJ,EAAAC,EAAAC,cAACsJ,EAAD,MAASvI,SAASwI,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvE,KAAK,SAAAwE,GACjCA,EAAaC","file":"static/js/main.f811b2b8.chunk.js","sourcesContent":["/*******************************\r\nThese URLs are using a self-hosted cors-anywhere reverse proxy to add a CORS header to the BGG API\r\nSource: https://github.com/Rob--W/cors-anywhere\r\n*******************************/\r\nconst CORS_URL = 'https://web-production-de84.up.railway.app'\r\nexport const THING_ITEMS_ENDPOINT = `${CORS_URL}/https://boardgamegeek.com/xmlapi2/thing?stats=1&id=`;\r\nexport const COLLECTION_ENDPOINT = `${CORS_URL}/https://api.geekdo.com/xmlapi2/collection?own=1&stats=1&excludesubtype=boardgameexpansion&username=`;","import React from 'react';\r\nimport { COLLECTION_ENDPOINT } from '../utils/urlConstants';\r\nimport './UsernameField.css'\r\n\r\n/* Import Google Analytics */\r\nimport ReactGA from 'react-ga';\r\n/* Google Analytics Events */\r\nconst keypressGA = () => {\r\n    ReactGA.event({\r\n        category: 'Collection Request',\r\n        action: 'Enter key pressed'\r\n      });\r\n}\r\nconst submitGA = () => {\r\n    ReactGA.event({\r\n        category: 'Collection Request',\r\n        action: 'Clicked Submit'\r\n      });\r\n}\r\n\r\nconst UsernameField = ({ recursiveFetchAndWait, setGameList}) => {\r\n\r\n    const handleKeyPress = (event) => {\r\n        if (event.key === 'Enter') {\r\n            keypressGA(); // Google Analytics\r\n            setGameList([]);\r\n            recursiveFetchAndWait(COLLECTION_ENDPOINT + event.target.value); \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter BGG Username\"\r\n                name=\"username\"\r\n                id=\"searchBox\"\r\n                onKeyPress={handleKeyPress}\r\n            />\r\n            <button type=\"button\"\r\n                    onClick={ (event) => {\r\n                                submitGA(); // Google Analytics\r\n                                setGameList([]);\r\n                                recursiveFetchAndWait(COLLECTION_ENDPOINT + document.querySelector('#searchBox').value);\r\n                            } }>\r\n            Submit</button>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default UsernameField;","/* Going through the array and changing default values and converting string numbers to actual numbers so that the Table can sort them correctly */\r\nconst gameDataConversions = (array) => {\r\n\tarray.forEach(game => {\r\n\t\tif (game.statistics[0].ratings[0].ranks[0].rank[0].$.value === 'Not Ranked')\r\n\t\t\tgame.statistics[0].ratings[0].ranks[0].rank[0].$.value = 'N/A';\r\n\t\telse {\r\n\t\t\tgame.statistics[0].ratings[0].ranks[0].rank[0].$.value = Number(game.statistics[0].ratings[0].ranks[0].rank[0].$.value);\r\n\t\t}\r\n\r\n\t\tgame.minplayers[0].$.value = Number(game.minplayers[0].$.value);\r\n\t\tif (isNaN(game.minplayers[0].$.value))\r\n\t\t\tgame.stats[0].$.minplayers = '--';\r\n\r\n\t\tgame.maxplayers[0].$.value = Number(game.maxplayers[0].$.value);\r\n\t\tif (isNaN(game.maxplayers[0].$.value))\r\n\t\t\tgame.maxplayers[0].$.value = '--';\r\n\r\n\t\tgame.maxplaytime[0].$.value = Number(game.maxplaytime[0].$.value);\r\n\t\tif (isNaN(game.maxplaytime[0].$.value))\r\n\t\t\tgame.maxplaytime[0].$.value = '--';\r\n\r\n\t\tif (game.yearpublished[0].$.value === undefined)\r\n\t\t\tgame.yearpublished[0].$.value = ['--'];\r\n\t})\r\n}\r\n\r\nexport default gameDataConversions;","import React from 'react';\r\n\r\nconst columns = [\r\n    {\r\n        Header: 'Rank',\r\n        accessor: 'statistics[0].ratings[0].ranks[0].rank[0].$.value',\r\n        maxWidth: 75,\r\n        sortMethod: (a,b) => {\r\n            // force null, undefined, and N/A to the bottom\r\n            a = a === null || a === undefined || a === 'N/A' ? Infinity : a\r\n            b = b === null || b === undefined || b === 'N/A' ? Infinity : b\r\n            // Return either 1 or -1 to indicate a sort priority\r\n            if (a > b) {\r\n                return 1\r\n            }\r\n            if (a < b) {\r\n                return -1\r\n            }\r\n            // returning 0, undefined or any falsey value will use subsequent sorts or\r\n            // the index as a tiebreaker\r\n            return 0\r\n        }\r\n    },\r\n    {\r\n        Header: '',\r\n        accessor: 'thumbnail[0]',\r\n        maxWidth: 75,\r\n        sortable: false,\r\n        Cell: props => <img src={ props.value } width=\"64\" alt=\"thumbnail\" className='thumbnail' />\r\n    },\r\n    {\r\n        Header: 'Title',\r\n        accessor: 'name[0].$.value',\r\n        minWidth: 150,\r\n        maxWidth: 450,\r\n        filterable: true,\r\n        style: { 'whiteSpace': 'unset'}, // Allows word wrap\r\n        Cell: props => <div className='title'>\r\n                        <a href={ 'https://boardgamegeek.com/boardgame/' + props.original.$.id } target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            { props.value}\r\n                        </a> <span className='yearPublished'>({ props.original.yearpublished[0].$.value })</span>\r\n                        </div>\r\n    },\r\n    {\r\n        Header: 'Avg Rating',\r\n        accessor: 'statistics[0].ratings[0].average[0].$.value',\r\n        defaultSortDesc: true,\r\n        maxWidth: 100,\r\n        Cell: props => \t<div className='ratingContainer'>\r\n                            <div className='averageRating'\r\n                                /* Setting background colors for the different ranges */\r\n                                    style={{backgroundColor:\r\n                                    Math.round(10 * props.value)/10 >= 9 ? '#249563' // Rounding to the tenths place\r\n                                    : Math.round(10 * props.value)/10 >= 8 ?  '#2fc482'\r\n                                    : Math.round(10 * props.value)/10 >= 7 ?  '#1d8acd'\r\n                                    : Math.round(10 * props.value)/10 >= 5 ?  '#5369a2'\r\n                                    : Math.round(10 * props.value)/10 >= 3 ?  '#df4751'\r\n                                    : '#db303b'\r\n                            }}>\r\n                                { /* The average rating number to be displayd */ }\r\n                                { Math.round(10 * props.value)/10 }\r\n                                \r\n                            </div>\r\n                        </div>\r\n    },\r\n    {\r\n        Header: 'Min Players',\r\n        accessor: 'minplayers[0].$.value',\r\n        maxWidth: 100,\r\n        sortMethod: (a,b) => {\r\n            // force null, undefined, and N/A to the bottom\r\n            a = a === null || a === undefined || a === '--' ? Infinity : a\r\n            b = b === null || b === undefined || b === '--' ? Infinity : b\r\n            // Return either 1 or -1 to indicate a sort priority\r\n            if (a > b) {\r\n                return 1\r\n            }\r\n            if (a < b) {\r\n                return -1\r\n            }\r\n            // returning 0, undefined or any falsey value will use subsequent sorts or\r\n            // the index as a tiebreaker\r\n            return 0\r\n        }\r\n    },\r\n    {\r\n        Header: 'Max Players',\r\n        accessor: 'maxplayers[0].$.value',\r\n        defaultSortDesc: true,\r\n        maxWidth: 100,\r\n        sortMethod: (a,b) => {\r\n            // force null, undefined, and N/A to the bottom\r\n            a = a === null || a === undefined || a === '--' ? -Infinity : a\r\n            b = b === null || b === undefined || b === '--' ? -Infinity : b\r\n            // Return either 1 or -1 to indicate a sort priority\r\n            if (a > b) {\r\n                return 1\r\n            }\r\n            if (a < b) {\r\n                return -1\r\n            }\r\n            // returning 0, undefined or any falsey value will use subsequent sorts or\r\n            // the index as a tiebreaker\r\n            return 0\r\n        }\r\n    },\r\n    {\r\n        Header: 'Play Time',\r\n        accessor: 'maxplaytime[0].$.value',\r\n        defaultSortDesc: true,\r\n        maxWidth: 100,\r\n        sortMethod: (a,b) => {\r\n            // force null, undefined, and N/A to the bottom\r\n            a = a === null || a === undefined || a === '--' ? -Infinity : a\r\n            b = b === null || b === undefined || b === '--' ? -Infinity : b\r\n            // Return either 1 or -1 to indicate a sort priority\r\n            if (a > b) {\r\n                return 1\r\n            }\r\n            if (a < b) {\r\n                return -1\r\n            }\r\n            // returning 0, undefined or any falsey value will use subsequent sorts or\r\n            // the index as a tiebreaker\r\n            return 0\r\n        },\r\n        Cell: props => <span>{props.value} Min</span>\r\n    },\r\n    {\r\n        Header: 'Weight',\r\n        accessor: 'statistics[0].ratings[0].averageweight[0].$.value',\r\n        maxWidth: 100,\r\n        Cell: props => \t<strong><span\r\n                            style={{color:\r\n                                Math.round(100 * props.value)/100 >=5 ? '#ff6b26' // Rounding to the hundreths place\r\n                                : Math.round(100 * props.value)/100 >=4 ? '#ff6b26'\r\n                                : Math.round(100 * props.value)/100 >=3 ? '#ff6b26'\r\n                                : Math.round(100 * props.value)/100 >=2 ? '#5bda98'\r\n                                : '#5bda98'\r\n                        }}>\r\n                            { Math.round(100 * props.value)/100 }</span> / 5</strong>\r\n                        \r\n    }\r\n]\r\n\r\nexport default columns;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport './App.css';\r\nimport UsernameField from '../Components/UsernameField';\r\nimport gameDataConversions from '../utils/gameDataConversions'\r\nimport { THING_ITEMS_ENDPOINT, COLLECTION_ENDPOINT } from '../utils/urlConstants';\r\nimport { addFilterPlaceholder, setTimeoutAsCallback } from '../utils/helperFunctions';\r\nimport columns from '../utils/columns';\r\n\r\n/* node-xml2js (https://www.npmjs.com/package/xml2js) */\r\nimport XML2JS from 'xml2js'\r\n\r\n/* Import React Table */\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\n/* Import Google Analytics */\r\nimport ReactGA from 'react-ga';\r\nReactGA.initialize('UA-139517114-1');\r\nReactGA.pageview(window.location.pathname + window.location.search);\r\n/* Google Analytics Event */\r\nconst urlParamGA = () => {\r\n    ReactGA.event({\r\n        category: 'Collection Request',\r\n        action: 'URL Param entered'\r\n      });\r\n}\r\n\r\nconst App = () => {\r\n\r\n\tconst [gameList, setGameList] = useState([]);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [pageSize, setPageSize] = useState(undefined); // React Table default\r\n\r\n\t/*******************************\r\n\tFunction that fetches the data. The Collection endpoint returns response code 202 until all the data\r\n\thas been retrieved. This function will wait an allotted amount of time and then retry until it\r\n\tretrieves a 200 response. Then the Thing Items endpoint is called to gather additional statistics.\r\n\tFinally the received array is added to the state array gameList.\r\n\t********************************/\r\n\tconst recursiveFetchAndWait = useCallback(\r\n\t\t(url) => {\r\n\t\t\tsetLoading(true);\r\n\t\r\n\t\t\tfetch(url)\r\n\t\t\t.then(response => {\r\n\t\t\t\tif (response.status === 200) { // Checking for response code 200\r\n\t\t\t\t\treturn response.text();\r\n\r\n\t\t\t\t} else if (response.status === 202) { // If the status response was 202 (API still retrieving data), call the fetch again after a set timeout\r\n\t\t\t\t\tsetTimeoutAsCallback(() => recursiveFetchAndWait(url));\r\n\r\n\t\t\t\t} else\r\n\t\t\t\t\tconsole.log('error: ', response.status);\r\n\t\t\t})\r\n\r\n\t\t\t.then(data => {\r\n\t\t\t\tlet numGames;\r\n\t\t\t\tlet gameIds = [];\r\n\t\t\t\tlet arrayOfArrays = [];\r\n\r\n\t\t\t\tXML2JS.parseString(data, (err, result) => { // xml2js: converts XML to JSON\r\n\t\t\t\t\tif (result.items.$.totalitems !== '0') { // Only processing further if there are returned results\r\n\t\t\t\t\t\tnumGames = Number(result.items.$.totalitems);\r\n\r\n\t\t\t\t\t\tresult.items.item.forEach(game => {\r\n\t\t\t\t\t\t\tgameIds.push(game.$.objectid);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (numGames > 1200) {\r\n\t\t\t\t\t\t// Thing Items endpoint can't handle more then 1200 requests at once, so need to split it up into multiple arrays\r\n\t\t\t\t\t\twhile (gameIds.length) {\r\n\t\t\t\t\t\t\tarrayOfArrays.push(gameIds.splice(0,1200)); // Splitting gameIds into arrays of max length 1200\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tif (numGames > 0 && numGames <= 1200) {\r\n\t\t\t\t\treturn fetch(THING_ITEMS_ENDPOINT + gameIds.join())\r\n\r\n\t\t\t\t\t.then(response => response.text())\r\n\t\t\r\n\t\t\t\t\t.then(xml => {\r\n\t\t\t\t\t\treturn XML2JS.parseString(xml, (err, result) => {\r\n\t\t\t\t\t\t\tgameDataConversions(result.items.item);\r\n\t\t\r\n\t\t\t\t\t\t\tsetGameList(gameList => gameList.concat(result.items.item));\r\n\r\n\t\t\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t\t\r\n\t\t\t\t} else { // For collections >1200 games\r\n\t\t\t\t\tarrayOfArrays.forEach(array => {\r\n\t\t\t\t\t\tfetch(THING_ITEMS_ENDPOINT + array.join())\r\n\r\n\t\t\t\t\t\t.then(response => response.text())\r\n\t\t\r\n\t\t\t\t\t\t.then(xml => {\r\n\t\t\t\t\t\t\treturn XML2JS.parseString(xml, (err, result) => {\r\n\t\t\t\t\t\t\t\tgameDataConversions(result.items.item);\r\n\t\t\t\r\n\t\t\t\t\t\t\t\tsetGameList(gameList => gameList.concat(result.items.item));\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\t[],\r\n\t);\r\n\r\n\tuseEffect(() => { // React hook that replaced ComponentDidMount\r\n\t\taddFilterPlaceholder();\r\n\r\n\t\t/* Grabbing the URL params */\r\n\t\tlet params = (new URL(document.location)).searchParams;\r\n\t\tlet username = params.get(\"username\");\r\n\r\n\t\t/* Allowing the user to specify size of the page onLoad */\r\n\t\tlet rows = params.get(\"rows\");\r\n\t\tif (rows !== null) {\r\n\t\t\tsetPageSize(Number(rows));\r\n\t\t}\r\n\t\t\r\n\t\t/* This call is made for if the website is loaded with params attached already */\r\n\t\tif (username !== null) {\r\n\t\t\turlParamGA(); // Google Analytics\r\n\r\n\t\t\tlet xmlUrl = COLLECTION_ENDPOINT + username;\r\n\t\t\trecursiveFetchAndWait(xmlUrl);\r\n\t\t}\r\n\t}, [recursiveFetchAndWait]);\r\n\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<h1><a className=\"h1Link\" href='.'>Better BGG Collection</a></h1>\r\n\t\t\t<p className='description'>Enter your BoardGameGeek username below to pull up your collection!</p>\r\n\t\t\t<UsernameField recursiveFetchAndWait = { recursiveFetchAndWait } setGameList = { setGameList }/>\r\n\t\t\t<p className='tipText'>Tip: Hold shift when sorting to multi-sort!</p>\r\n\t\t\t<ReactTable \r\n\t\t\t\tdata = { gameList }\r\n\t\t\t\tcolumns = { columns }\r\n\t\t\t\tdefaultSorted = { [{ id: \"statistics[0].ratings[0].ranks[0].rank[0].$.value\", desc: false }] } // Page loads with rank as the default sorted column\r\n\t\t\t\tshowPaginationTop = { true }\r\n\t\t\t\tminRows = { 5 }\r\n\t\t\t\tpageSizeOptions = {[5, 10, 20, 25, 50, 100, 300, 500, 1000, 2000, 5000, 10000]}\r\n\t\t\t\tdefaultPageSize = { 300 }\r\n\t\t\t\tpageSize = { pageSize }\r\n\t\t\t\tloading = { loading }\r\n\t\t\t\tnoDataText = { 'No games found or you haven\\'t entered your username yet' }\r\n\t\t\t\tclassName = '-highlight'\r\n\t\t\t\tdefaultFilterMethod = {\r\n\t\t\t\t\t/* Slightly modifying defaultFilterMethod. Changing startsWith to includes and putting a toLowerCase for both row and filter so case sensitivity doesn't matter when the user searchs */\r\n\t\t\t\t\t(filter, row) => {\r\n\t\t\t\t\t\tconst id = filter.pivotId || filter.id;\r\n\t\t\t\t\t\treturn row[id] !== undefined ? String(row[id]).toLowerCase().includes(filter.value.toLowerCase()) : true\r\n\t\t\t\t\t}\r\n\t\t\t\t}/>\r\n\t\t\t<div id='footer'>\r\n\t\t\t\t<p>Page created with <span role=\"img\" aria-label=\"Red Heart\">❤️</span></p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App;","export const addFilterPlaceholder = () => {\r\n    const filters = document.querySelectorAll(\"div.rt-th > input\");\r\n    for (let filter of filters) {\r\n      filter.placeholder = \"Search...\";\r\n    }\r\n}\r\n\r\n/*******************************\r\nNew function to call setTimeout otherwise recursiveFetchAndWait() would be run again \r\nwhen you pass it to the default JS setTimeout function because it has a parameter.\r\n********************************/\r\nexport const setTimeoutAsCallback = (callback) => {\r\n    setTimeout(callback, 5000);\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}